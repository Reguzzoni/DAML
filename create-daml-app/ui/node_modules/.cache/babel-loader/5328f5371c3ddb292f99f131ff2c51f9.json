{"ast":null,"code":"var _jsxFileName = \"D:\\\\blockchain\\\\DAML\\\\create-daml-app\\\\ui\\\\src\\\\components\\\\PartyListEdit.tsx\",\n    _s = $RefreshSig$();\n\n// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { Form, List, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\r\n * React component to edit a list of `Party`s.\r\n */\nconst PartyListEdit = ({\n  parties,\n  onAddParty\n}) => {\n  _s();\n\n  const [newParty, setNewParty] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const addParty = async event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setIsSubmitting(true);\n    const success = await onAddParty(newParty);\n    setIsSubmitting(false);\n\n    if (success) {\n      setNewParty('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    relaxed: true,\n    children: [[...parties].sort((x, y) => x.localeCompare(y)).map(party => /*#__PURE__*/_jsxDEV(List.Item, {\n      children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n        name: \"user outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n        children: /*#__PURE__*/_jsxDEV(List.Header, {\n          className: \"test-select-following\",\n          children: party\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, party, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: addParty,\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        fluid: true,\n        readOnly: isSubmitting,\n        loading: isSubmitting,\n        className: \"test-select-follow-input\",\n        placeholder: \"Username to follow\",\n        value: newParty,\n        onChange: event => setNewParty(event.currentTarget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"test-select-follow-button\",\n        children: \"Follow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PartyListEdit, \"u/lEVP6sPwUj65wPs3eRzRJtHOc=\");\n\n_c = PartyListEdit;\nexport default PartyListEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartyListEdit\");","map":{"version":3,"sources":["D:/blockchain/DAML/create-daml-app/ui/src/components/PartyListEdit.tsx"],"names":["React","Form","List","Button","PartyListEdit","parties","onAddParty","newParty","setNewParty","useState","isSubmitting","setIsSubmitting","addParty","event","preventDefault","success","sort","x","y","localeCompare","map","party","currentTarget","value"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;;;AAQA;AACA;AACA;AACA,MAAMC,aAA8B,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAAA;;AAChE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,KAAK,CAACS,QAAN,CAAe,KAAf,CAAxC;;AAEA,QAAMG,QAAQ,GAAG,MAAOC,KAAP,IAAmC;AAClD,QAAIA,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACC,cAAN;AACD;;AACDH,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMI,OAAO,GAAG,MAAMT,UAAU,CAACC,QAAD,CAAhC;AACAI,IAAAA,eAAe,CAAC,KAAD,CAAf;;AACA,QAAII,OAAJ,EAAa;AACXP,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAVD;;AAYA,sBACE,QAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAA,eACG,CAAC,GAAGH,OAAJ,EAAaW,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAA5B,EAAgDE,GAAhD,CAAqDC,KAAD,iBACnD,QAAC,IAAD,CAAM,IAAN;AAAA,8BAGE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD,CAAM,OAAN;AAAA,+BACE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,SAAS,EAAC,uBAAvB;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OACOA,KADP;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAaE;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAET,QAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,MADP;AAEE,QAAA,QAAQ,EAAEF,YAFZ;AAGE,QAAA,OAAO,EAAEA,YAHX;AAIE,QAAA,SAAS,EAAC,0BAJZ;AAKE,QAAA,WAAW,EAAC,oBALd;AAME,QAAA,KAAK,EAAEH,QANT;AAOE,QAAA,QAAQ,EAAGM,KAAD,IAAWL,WAAW,CAACK,KAAK,CAACS,aAAN,CAAoBC,KAArB;AAPlC;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAjDD;;GAAMnB,a;;KAAAA,a;AAmDN,eAAeA,aAAf","sourcesContent":["// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport React from 'react'\r\nimport { Form, List, Button } from 'semantic-ui-react';\r\nimport { Party } from '@daml/types';\r\n\r\ntype Props = {\r\n  parties: Party[];\r\n  onAddParty: (party: Party) => Promise<boolean>;\r\n}\r\n\r\n/**\r\n * React component to edit a list of `Party`s.\r\n */\r\nconst PartyListEdit: React.FC<Props> = ({parties, onAddParty}) => {\r\n  const [newParty, setNewParty] = React.useState('');\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n\r\n  const addParty = async (event?: React.FormEvent) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    setIsSubmitting(true);\r\n    const success = await onAddParty(newParty);\r\n    setIsSubmitting(false);\r\n    if (success) {\r\n      setNewParty('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <List relaxed>\r\n      {[...parties].sort((x, y) => x.localeCompare(y)).map((party) =>\r\n        <List.Item\r\n          key={party}\r\n        >\r\n          <List.Icon name='user outline' />\r\n          <List.Content>\r\n            <List.Header className='test-select-following'>\r\n              {party}\r\n            </List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n      )}\r\n      <br />\r\n      <Form onSubmit={addParty}>\r\n        <Form.Input\r\n          fluid\r\n          readOnly={isSubmitting}\r\n          loading={isSubmitting}\r\n          className='test-select-follow-input'\r\n          placeholder=\"Username to follow\"\r\n          value={newParty}\r\n          onChange={(event) => setNewParty(event.currentTarget.value)}\r\n        />\r\n        <Button\r\n          type='submit'\r\n          className='test-select-follow-button'>\r\n          Follow\r\n        </Button>\r\n      </Form>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default PartyListEdit;\r\n"]},"metadata":{},"sourceType":"module"}