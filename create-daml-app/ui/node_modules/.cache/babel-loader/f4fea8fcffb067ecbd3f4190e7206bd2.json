{"ast":null,"code":"var _jsxFileName = \"D:\\\\blockchain\\\\DAML\\\\create-daml-app\\\\ui\\\\src\\\\components\\\\MainView.tsx\",\n    _s = $RefreshSig$();\n\n// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\nimport { Container, Grid, Header, Icon, Segment, Divider } from 'semantic-ui-react';\nimport { User } from '@daml.js/create-daml-app';\nimport { useParty, useLedger, useStreamFetchByKeys, useStreamQueries } from '@daml/react';\nimport UserList from './UserList';\nimport PartyListEdit from './PartyListEdit';\nimport MessageEdit from './MessageEdit';\nimport MessageList from './MessageList'; // USERS_BEGIN\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainView = () => {\n  _s();\n\n  var _myUserResult$contrac, _myUser$username, _myUser$following;\n\n  const username = useParty();\n  const myUserResult = useStreamFetchByKeys(User.User, () => [username], [username]);\n  const myUser = (_myUserResult$contrac = myUserResult.contracts[0]) === null || _myUserResult$contrac === void 0 ? void 0 : _myUserResult$contrac.payload;\n  const allUsers = useStreamQueries(User.User).contracts; // USERS_END\n  // Sorted list of users that are following the current user\n\n  const followers = useMemo(() => allUsers.map(user => user.payload).filter(user => user.username !== username).sort((x, y) => x.username.localeCompare(y.username)), [allUsers, username]); // FOLLOW_BEGIN\n\n  const ledger = useLedger();\n\n  const follow = async userToFollow => {\n    try {\n      await ledger.exerciseByKey(User.User.Follow, username, {\n        userToFollow\n      });\n      return true;\n    } catch (error) {\n      alert(`Unknown error:\\n${error}`);\n      return false;\n    }\n  }; // FOLLOW_END\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      centered: true,\n      columns: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        stretched: true,\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            as: \"h1\",\n            size: \"huge\",\n            color: \"blue\",\n            textAlign: \"center\",\n            style: {\n              padding: '1ex 0em 0ex 0em'\n            },\n            children: myUser ? `Welcome, ${myUser.username}!` : 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              as: \"h2\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                children: [(_myUser$username = myUser === null || myUser === void 0 ? void 0 : myUser.username) !== null && _myUser$username !== void 0 ? _myUser$username : 'Loading...', /*#__PURE__*/_jsxDEV(Header.Subheader, {\n                  children: \"Users I'm following\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PartyListEdit, {\n              parties: (_myUser$following = myUser === null || myUser === void 0 ? void 0 : myUser.following) !== null && _myUser$following !== void 0 ? _myUser$following : [],\n              onAddParty: follow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              as: \"h2\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"globe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                children: [\"The Network\", /*#__PURE__*/_jsxDEV(Header.Subheader, {\n                  children: \"My followers and users they are following\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UserList, {\n              users: followers,\n              onFollow: follow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              as: \"h2\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"pencil square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                children: [\"Messages\", /*#__PURE__*/_jsxDEV(Header.Subheader, {\n                  children: \"Send a message to a follower\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MessageEdit, {\n              followers: followers.map(follower => follower.username)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainView, \"RneS22kmw6Za/v288qKxbPjJuwA=\", false, function () {\n  return [useParty, useStreamFetchByKeys, useStreamQueries, useLedger];\n});\n\n_c = MainView;\nexport default MainView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"sources":["D:/blockchain/DAML/create-daml-app/ui/src/components/MainView.tsx"],"names":["React","useMemo","Container","Grid","Header","Icon","Segment","Divider","User","useParty","useLedger","useStreamFetchByKeys","useStreamQueries","UserList","PartyListEdit","MessageEdit","MessageList","MainView","username","myUserResult","myUser","contracts","payload","allUsers","followers","map","user","filter","sort","x","y","localeCompare","ledger","follow","userToFollow","exerciseByKey","Follow","error","alert","padding","following","follower"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport React, { useMemo } from 'react';\r\nimport { Container, Grid, Header, Icon, Segment, Divider } from 'semantic-ui-react';\r\nimport { Party } from '@daml/types';\r\nimport { User } from '@daml.js/create-daml-app';\r\nimport { useParty, useLedger, useStreamFetchByKeys, useStreamQueries } from '@daml/react';\r\nimport UserList from './UserList';\r\nimport PartyListEdit from './PartyListEdit';\r\nimport MessageEdit from './MessageEdit';\r\nimport MessageList from './MessageList';\r\n\r\n// USERS_BEGIN\r\nconst MainView: React.FC = () => {\r\n  const username = useParty();\r\n  const myUserResult = useStreamFetchByKeys(User.User, () => [username], [username]);\r\n  const myUser = myUserResult.contracts[0]?.payload;\r\n  const allUsers = useStreamQueries(User.User).contracts;\r\n// USERS_END\r\n\r\n  // Sorted list of users that are following the current user\r\n  const followers = useMemo(() =>\r\n    allUsers\r\n    .map(user => user.payload)\r\n    .filter(user => user.username !== username)\r\n    .sort((x, y) => x.username.localeCompare(y.username)),\r\n    [allUsers, username]);\r\n\r\n  // FOLLOW_BEGIN\r\n  const ledger = useLedger();\r\n\r\n  const follow = async (userToFollow: Party): Promise<boolean> => {\r\n    try {\r\n      await ledger.exerciseByKey(User.User.Follow, username, {userToFollow});\r\n      return true;\r\n    } catch (error) {\r\n      alert(`Unknown error:\\n${error}`);\r\n      return false;\r\n    }\r\n  }\r\n  // FOLLOW_END\r\n\r\n  return (\r\n    <Container>\r\n      <Grid centered columns={2}>\r\n        <Grid.Row stretched>\r\n          <Grid.Column>\r\n            <Header as='h1' size='huge' color='blue' textAlign='center' style={{padding: '1ex 0em 0ex 0em'}}>\r\n                {myUser ? `Welcome, ${myUser.username}!` : 'Loading...'}\r\n            </Header>\r\n\r\n            <Segment>\r\n              <Header as='h2'>\r\n                <Icon name='user' />\r\n                <Header.Content>\r\n                  {myUser?.username ?? 'Loading...'}\r\n                  <Header.Subheader>Users I'm following</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n              <Divider />\r\n              <PartyListEdit\r\n                parties={myUser?.following ?? []}\r\n                onAddParty={follow}\r\n              />\r\n            </Segment>\r\n            <Segment>\r\n              <Header as='h2'>\r\n                <Icon name='globe' />\r\n                <Header.Content>\r\n                  The Network\r\n                  <Header.Subheader>My followers and users they are following</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n              <Divider />\r\n              {/* USERLIST_BEGIN */}\r\n              <UserList\r\n                users={followers}\r\n                onFollow={follow}\r\n              />\r\n              {/* USERLIST_END */}\r\n            </Segment>\r\n            <Segment>\r\n              <Header as='h2'>\r\n                <Icon name='pencil square' />\r\n                <Header.Content>\r\n                  Messages\r\n                  <Header.Subheader>Send a message to a follower</Header.Subheader>\r\n                </Header.Content>\r\n              </Header>\r\n              <MessageEdit\r\n                followers={followers.map(follower => follower.username)}\r\n              />\r\n              <Divider />\r\n              <MessageList />\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MainView;\r\n"]},"metadata":{},"sourceType":"module"}